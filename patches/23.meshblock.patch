diff --git a/src/mesh/meshblock.cpp b/src/mesh/meshblock.cpp
index f5ae1913..4d14accd 100644
--- a/src/mesh/meshblock.cpp
+++ b/src/mesh/meshblock.cpp
@@ -44,6 +44,10 @@
 #include "mesh_refinement.hpp"
 #include "meshblock_tree.hpp"
 
+// exo3 injection
+#include <exo3/affine_coordinate.hpp>
+#include <exo3/gnomonic_equiangle.hpp>
+
 //----------------------------------------------------------------------------------------
 //! MeshBlock constructor: constructs coordinate, boundary condition, hydro, field
 //!                        and mesh refinement objects.
@@ -123,6 +127,10 @@ MeshBlock::MeshBlock(int igid, int ilid, LogicalLocation iloc, RegionSize input_
     pcoord = new KerrSchild(this, pin, false);
   } else if (std::strcmp(COORDINATE_SYSTEM, "gr_user") == 0) {
     pcoord = new GRUser(this, pin, false);
+  } else if (std::strcmp(COORDINATE_SYSTEM, "gnomonic_equiangle") == 0) {
+    pcoord = new GnomonicEquiangle(this, pin, false);
+  } else if (std::strcmp(COORDINATE_SYSTEM, "affine_coordinate") == 0) {
+    pcoord = new AffineCoordinate(this, pin, false);
   }
 
 
@@ -332,6 +340,10 @@ MeshBlock::MeshBlock(int igid, int ilid, Mesh *pm, ParameterInput *pin,
     pcoord = new KerrSchild(this, pin, false);
   } else if (std::strcmp(COORDINATE_SYSTEM, "gr_user") == 0) {
     pcoord = new GRUser(this, pin, false);
+  } else if (std::strcmp(COORDINATE_SYSTEM, "gnomonic_equiangle") == 0) {
+    pcoord = new GnomonicEquiangle(this, pin, false);
+  } else if (std::strcmp(COORDINATE_SYSTEM, "affine_coordinate") == 0) {
+    pcoord = new AffineCoordinate(this, pin, false);
   }
 
 
